[
  {
    "objectID": "guide.html",
    "href": "guide.html",
    "title": "1  Implementing Univariate Extreme Value Theory in R: A Step-by-Step Guide",
    "section": "",
    "text": "2 Introduction\nUnivariate Extreme Value Theory (UEVT) focuses on analyzing the extreme tails of a dataset. These extremes might include record-high temperatures, large floods, or other unusually high values. UEVT is particularly relevant in climate science, where researchers often need to quantify the probability or severity of extreme weather events.\nWithin UEVT, there are two primary methods: block maxima and peaks over threshold. The block maxima method entails:\n\nDividing data into equally sized blocks (e.g., by year or by month).\nRecording the maximum value in each block.\nFitting a Generalized Extreme Value (GEV) distribution to these maxima.\n\nThis guide focuses on the block maxima approach because it’s straightforward for time-based datasets, such as annual maximum temperatures or monthly rainfall maxima.\n\n\n3 Prerequisites\nA basic understanding of statistics is a must. More particularly a solid understanding of distributions, likelihood concepts, and parameter estimation. Proficiency in R or any statistical software is also necessary as these calculations will be demonstrated on R. Will need the “evd” and “dplyr” packages to follow along with the example. When using on a real data set, the data needs to have a time component and a response variable needs to be selected. Missing values should be ommited from the data. Also, do not remove any extreme values as that is what will be measured.\nInstalling the packages:\n\n#install.packages(\"evd\", \"dplyr\")\nlibrary(evd)\nlibrary(dplyr)\n\n\n\n4 Implementation & Explanation\nFirst step is to make sure your data set is clean, free of NAs, has a time variable, and a response variable that you would like to find the UEVT for. For simplicity’s sake, in this example we will be creating our own dataset which looks at daily rainfall over a year long period.\nCreating the data:\n\n# Set the seed for reproducibility\nset.seed(123)\n\n# Generate a sequence of daily dates\ndates <- seq.Date(\n  from = as.Date(\"2002-11-08\"),\n  to   = as.Date(\"2003-11-07\"),\n  by   = \"day\"\n)\n\n# Simulate daily rainfall (in mm) around a mean of 10, with some variability\nrainfall_values <- rnorm(\n  n    = length(dates),\n  mean = 10,\n  sd   = 5\n)\n\n# Ensure no negative rainfall\nrainfall_values[rainfall_values < 0] <- 0\nrainfall_values <- round(rainfall_values, 2)\n\n# Combine into a data frame\ndf <- data.frame(\n  Date     = dates,\n  Rainfall = rainfall_values\n)\n\n# Look at the first few rows\nhead(df)\n\n        Date Rainfall\n1 2002-11-08     7.20\n2 2002-11-09     8.85\n3 2002-11-10    17.79\n4 2002-11-11    10.35\n5 2002-11-12    10.65\n6 2002-11-13    18.58\n\n\nThe second step is to define the blocks. This is done on the date column and could be any values you desire. For this example we will split the days into two blocks so that the blocks are a week long each.\nCreating the blocks:\n\n# Turn the dates into months \ndf_blocked <- df %>%\n  mutate(\n    YearMonth = format(Date, \"%Y-%m\")\n  )\n\nhead(df_blocked)\n\n        Date Rainfall YearMonth\n1 2002-11-08     7.20   2002-11\n2 2002-11-09     8.85   2002-11\n3 2002-11-10    17.79   2002-11\n4 2002-11-11    10.35   2002-11\n5 2002-11-12    10.65   2002-11\n6 2002-11-13    18.58   2002-11\n\n\nNext is to find the maximum value in each block. This new dataframe with just the maximum values and blocks will be the dataframe we use to fit a GEV distribution.\nExtracting the maxima:\n\n# Extract the maximum value from each month and create a new df with these parameters\ndf_maxima <- df_blocked %>%\n  group_by(YearMonth) %>%\n  summarise(\n    MonthlyMax = max(Rainfall, na.rm = TRUE)\n  ) %>%\n  ungroup()\n\ndf_maxima\n\n# A tibble: 13 × 2\n   YearMonth MonthlyMax\n   <chr>          <dbl>\n 1 2002-11         18.9\n 2 2002-12         20.8\n 3 2003-01         20.2\n 4 2003-02         20.9\n 5 2003-03         19.6\n 6 2003-04         26.2\n 7 2003-05         21.0\n 8 2003-06         19.8\n 9 2003-07         21.5\n10 2003-08         20.0\n11 2003-09         20.2\n12 2003-10         18.4\n13 2003-11         22.9\n\n\nTo begin the analysis the maxima df is fitted to the GEV. This will return a model that will tell us the typical level of monthly maxima, the variability of the maxima, and the shape of the data.\n\n# The fgev function from the evd package fits the GEV\ngev_fit <- fgev(df_maxima$MonthlyMax)\n\ngev_fit\n\n\nCall: fgev(x = df_maxima$MonthlyMax) \nDeviance: 48.39891 \n\nEstimates\n    loc    scale    shape  \n19.9190   1.2434   0.1162  \n\nStandard Errors\n   loc   scale   shape  \n0.3865  0.2904  0.2020  \n\nOptimization Information\n  Convergence: successful \n  Function Evaluations: 31 \n  Gradient Evaluations: 7 \n\n\nHow to interpret the table: loc: Location, this is essentialy the average of the maxima for each block. In this case the average high of rainfall each month is about 20mm. scale: Scale, this tells how spread out the data is. In our case, the monthly maxima can vary by about 1.25mm from the location value. shape: Shape, this tells us how likely we are to see extreme values that exceed the average maxima. A shape value greater than 0 suggests an extreme event that exceeds the monthly maxima is likely to happen; less than 0 suggests that extreme events are not likely at all, closer to impossible. In our case we have a shape greater than 0, but our standard error is very large in comparison. This means there is large variability and we cannot accurately predict whether or not extreme events are likely.\nThe next step is to analyze the goodness of fit of the model, this will help determine what is going on with the shape. We will be using the q-q plot which is one of the fastest ways to determine the goodness of fit.\n\nplot(gev_fit, which = 2)\n\n\n\n\nThe q-q plot takes the empirical values from the data (y-axis) and fits them with the expected values from the model (x-axis). From our plot we can see that our most extreme value is above the model. This is probably why the standard error of our shape was high compared the value of shape.\n\n\n5 Conclusion\nIn this guide, we demonstrated how to implement Univariate Extreme Value Theory (UEVT) using the block maxima approach, fit a Generalized Extreme Value (GEV) model, and evaluate the model’s fit using a Q-Q plot.\nBy splitting data into blocks (e.g., monthly or yearly) and extracting maxima, we capture the most extreme values. The Q-Q plot then helps verify whether the GEV parameters provide a good match for those extremes. If most points lie near the diagonal, it indicates that the model captures the distribution of maxima reasonably well.\nOverall, this process offers a straightforward way to interpret rare events in a timeframe."
  },
  {
    "objectID": "topic.html",
    "href": "topic.html",
    "title": "Appendix A — Univariate Extreme Value Theory",
    "section": "",
    "text": "Univariate extreme value theory, UEVT as we will call it, is all about measuring and identifying the extreme tails of data. In the context of my article, Statistical Methods for Extreme Event Attribution in Climate Science, UEVT focuses on weather events like record high temperatures or huge floods. The univariate part means that the focus is on one variable of an event like rainfall in a hurricane.\n\nThere are two approaches to UEVT, block maxima and peaks over threshold. Block maxima splits the data into blocks, like a time frame. Next a generalized extreme value distribution is fit. From there the shape of the distribution can tell you the amount of extreme values or how often they occur. We will be looking into a step by step guide of how to implement UEVT using the block maxima method."
  },
  {
    "objectID": "needs.html",
    "href": "needs.html",
    "title": "Appendix B — Needs Assessment",
    "section": "",
    "text": "What does someone trying to accomplish your chosen task need help with?\nUsing R packages that might be new. Analyzing q-q or residual plots for goodness of fit test. Drawing conclusions from the GEV.\nWhat parts are likely to be tricky?\nInterpreting the shape of the GEV. Overall analyzation of results.\nWhat resources are already available on this topic that may be helpful? Look for e.g. software vignettes, package documentation, papers about software packages, and so on.\nPackage documentation on ismev and evd for using GEV. There is a book on Extreme Value Theory that my original paper references but it would need to be bought."
  },
  {
    "objectID": "task-analysis.html#additional-guidance",
    "href": "task-analysis.html#additional-guidance",
    "title": "Appendix C — Task Analysis",
    "section": "C.1 Additional Guidance",
    "text": "C.1 Additional Guidance\nYour check-in should answer these basic questions (and similar concerns that apply more directly to your topic).\nOnce you’ve completed the check-in, you can use this section to jump-start an introduction/set-up/getting started section in your user guide. This document should remain as an appendix to your main report."
  }
]